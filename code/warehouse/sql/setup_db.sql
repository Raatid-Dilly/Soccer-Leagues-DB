DROP TABLE IF EXISTS 
    public."seasons",
    public."temp_leagues", 
    public."temp_standings", 
    public."temp_teams", 
    public."temp_players", 
    public."temp_team_stats",
    public."temp_player_stats", 
    public."temp_topscorers", 
    public."temp_league_fixtures", 
    public."temp_fixtures_stats_teams";
DROP SCHEMA IF EXISTS soccer CASCADE;
CREATE SCHEMA soccer;

CREATE TABLE IF NOT EXISTS soccer.Seasons(
    season VARCHAR PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS soccer.Leagues(
    id VARCHAR PRIMARY KEY,
    name VARCHAR(50),
    country VARCHAR(50),
    country_code VARCHAR(3)
);

CREATE TABLE IF NOT EXISTS soccer.Teams(
    id VARCHAR(10) PRIMARY KEY,
    name VARCHAR(50),
    code VARCHAR(10),
    league_id VARCHAR(5),
    FOREIGN KEY(league_id) REFERENCES soccer.Leagues(id)
);

CREATE TABLE IF NOT EXISTS soccer.Players(
    id VARCHAR PRIMARY KEY, 
    name VARCHAR(50), 
    firstname VARCHAR(50), 
    lastname VARCHAR(50), 
    birth_date DATE, 
    nationality VARCHAR(50), 
    height INTEGER, 
    weight INTEGER 
);

CREATE TABLE IF NOT EXISTS soccer.Standings(
    season VARCHAR,
    team_id VARCHAR,
    team_name VARCHAR(50),
    rank INTEGER,
    points INTEGER,
    "goalsDiff" INTEGER,
    league_id VARCHAR,
    description VARCHAR(100),
    FOREIGN KEY(team_id) REFERENCES soccer.Teams(id),
    FOREIGN KEY(league_id) REFERENCES soccer.Leagues(id)
);

CREATE TABLE IF NOT EXISTS soccer.Team_Statistics(
    league_season VARCHAR,
    team_id VARCHAR(10),
    team_name VARCHAR,
    league_id VARCHAR,
    league_name VARCHAR,
    league_country VARCHAR,
    fixtures_played_home INTEGER,
    fixtures_played_away INTEGER,
    fixtures_played_total INTEGER,
    fixtures_wins_home INTEGER,
    fixtures_wins_away INTEGER,
    fixtures_wins_total INTEGER,
    fixtures_draws_home INTEGER,
    fixtures_draws_away INTEGER,
    fixtures_draws_total INTEGER,
    fixtures_loses_home INTEGER,
    fixtures_loses_away INTEGER,
    fixtures_loses_total INTEGER,
    goals_for_total_home INTEGER,
    goals_for_total_away INTEGER,
    goals_for_total_total INTEGER,
    goals_for_average_home NUMERIC,
    goals_for_average_away NUMERIC,
    goals_for_average_total NUMERIC,
    "goals_for_minute_0-15_total" INTEGER,
    "goals_for_minute_0-15_percentage" NUMERIC,
    "goals_for_minute_16-30_total" INTEGER,
    "goals_for_minute_16-30_percentage" NUMERIC,
    "goals_for_minute_31-45_total" INTEGER,
    "goals_for_minute_31-45_percentage" NUMERIC,
    "goals_for_minute_46-60_total" INTEGER,
    "goals_for_minute_46-60_percentage" NUMERIC,
    "goals_for_minute_61-75_total" INTEGER,
    "goals_for_minute_61-75_percentage" NUMERIC,
    "goals_for_minute_76-90_total" INTEGER,
    "goals_for_minute_76-90_percentage" NUMERIC,
    "goals_for_minute_91-105_total" INTEGER,
    "goals_for_minute_91-105_percentage" NUMERIC,
    "goals_for_minute_106-120_total" INTEGER,
    "goals_for_minute_106-120_percentage" NUMERIC,
    goals_against_total_home INTEGER,
    goals_against_total_away INTEGER,
    goals_against_total_total INTEGER,
    goals_against_average_home NUMERIC,
    goals_against_average_away NUMERIC,
    goals_against_average_total NUMERIC,
    "goals_against_minute_0-15_total" INTEGER,
    "goals_against_minute_0-15_percentage" NUMERIC,
    "goals_against_minute_16-30_total" INTEGER,
    "goals_against_minute_16-30_percentage" NUMERIC,
    "goals_against_minute_31-45_total" INTEGER,
    "goals_against_minute_31-45_percentage" NUMERIC,
    "goals_against_minute_46-60_total" INTEGER,
    "goals_against_minute_46-60_percentage" NUMERIC,
    "goals_against_minute_61-75_total" INTEGER,
    "goals_against_minute_61-75_percentage" NUMERIC,
    "goals_against_minute_76-90_total" INTEGER,
    "goals_against_minute_76-90_percentage" NUMERIC,
    "goals_against_minute_91-105_total" INTEGER,
    "goals_against_minute_91-105_percentage" NUMERIC,
    "goals_against_minute_106-120_total" INTEGER,
    "goals_against_minute_106-120_percentage" NUMERIC,
    biggest_streak_wins INTEGER,
    biggest_streak_draws INTEGER,
    biggest_streak_loses INTEGER,
    biggest_wins_home TEXT,
    biggest_wins_away TEXT,
    biggest_loses_home TEXT,
    biggest_loses_away TEXT,
    biggest_goals_for_home INTEGER,
    biggest_goals_for_away INTEGER,
    biggest_goals_against_home INTEGER,
    biggest_goals_against_away INTEGER,
    clean_sheet_home INTEGER,
    clean_sheet_away INTEGER,
    clean_sheet_total INTEGER,
    failed_to_score_home INTEGER,
    failed_to_score_away INTEGER,
    failed_to_score_total INTEGER,
    penalty_scored_total INTEGER,
    penalty_scored_percentage NUMERIC,
    penalty_missed_total INTEGER,
    penalty_missed_percentage NUMERIC,
    penalty_total INTEGER,
    "cards_yellow_0-15_total" INTEGER,
    "cards_yellow_0-15_percentage" NUMERIC,
    "cards_yellow_16-30_total" INTEGER,
    "cards_yellow_16-30_percentage" NUMERIC,
    "cards_yellow_31-45_total" INTEGER,
    "cards_yellow_31-45_percentage" NUMERIC,
    "cards_yellow_46-60_total" INTEGER,
    "cards_yellow_46-60_percentage" NUMERIC,
    "cards_yellow_61-75_total" INTEGER,
    "cards_yellow_61-75_percentage" NUMERIC,
    "cards_yellow_76-90_total" INTEGER,
    "cards_yellow_76-90_percentage" NUMERIC,
    "cards_yellow_91-105_total" INTEGER,
    "cards_yellow_91-105_percentage" NUMERIC,
    "cards_yellow_106-120_total" INTEGER,
    "cards_yellow_106-120_percentage" NUMERIC,
    "cards_red_0-15_total" INTEGER,
    "cards_red_0-15_percentage" NUMERIC,
    "cards_red_16-30_total" INTEGER,
    "cards_red_16-30_percentage" NUMERIC,
    "cards_red_31-45_total" INTEGER,
    "cards_red_31-45_percentage" NUMERIC,
    "cards_red_46-60_total" INTEGER,
    "cards_red_46-60_percentage" NUMERIC,
    "cards_red_61-75_total" INTEGER,
    "cards_red_61-75_percentage" NUMERIC,
    "cards_red_76-90_total" INTEGER,
    "cards_red_76-90_percentage" NUMERIC,
    "cards_red_91-105_total" INTEGER,
    "cards_red_91-105_percentage" NUMERIC,
    "cards_red_106-120_total" INTEGER,
    "cards_red_106-120_percentage" NUMERIC,
    FOREIGN KEY(league_id) REFERENCES soccer.Leagues(id),
    FOREIGN KEY(team_id) REFERENCES soccer.Teams(id),
    FOREIGN KEY(league_season) REFERENCES soccer.Seasons(season)
);

CREATE TABLE IF NOT EXISTS soccer.Player_Stats(
    player_id VARCHAR,
    team_id VARCHAR,  
    league_season VARCHAR(4),
    league_name VARCHAR,
    league_country VARCHAR, 
    games_appearences INTEGER, 
    games_lineups INTEGER, 
    games_minutes INTEGER, 
    games_number TEXT, 
    games_position VARCHAR(25), 
    games_rating NUMERIC, 
    games_captain BOOLEAN, 
    substitutes_in INTEGER, 
    substitutes_out INTEGER, 
    substitutes_bench INTEGER, 
    shots_total INTEGER, 
    shots_on INTEGER, 
    goals_total INTEGER, 
    goals_conceded INTEGER, 
    goals_assists INTEGER, 
    goals_saves INTEGER, 
    passes_total INTEGER, 
    passes_key INTEGER, 
    passes_accuracy NUMERIC, 
    tackles_total INTEGER, 
    tackles_blocks INTEGER, 
    tackles_interceptions INTEGER, 
    duels_total INTEGER, 
    duels_won INTEGER, 
    dribbles_attempts INTEGER, 
    dribbles_success INTEGER, 
    dribbles_past INTEGER, 
    fouls_drawn INTEGER, 
    fouls_committed INTEGER, 
    cards_yellow INTEGER, 
    cards_yellowred INTEGER, 
    cards_red INTEGER, 
    penalty_won INTEGER, 
    penalty_commited INTEGER, 
    penalty_scored INTEGER, 
    penalty_missed INTEGER, 
    penalty_saved INTEGER,
    FOREIGN KEY(player_id) REFERENCES soccer.Players(id),
    FOREIGN KEY(team_id) REFERENCES soccer.Teams(id),
    FOREIGN KEY(league_season) REFERENCES soccer.Seasons(season)
);

CREATE TABLE IF NOT EXISTS soccer.Topscorers(
    player_id VARCHAR(10),
    name VARCHAR(50),
    rank VARCHAR(2),
    team_id VARCHAR(10),
    team_name VARCHAR(50),
    league_id VARCHAR(10),
    league_name VARCHAR(30),
    league_country VARCHAR(30),
    league_season VARCHAR(4),
    games_appearences INTEGER,
    games_rating NUMERIC,
    shots_total INTEGER,
    shots_on INTEGER,
    goals_total INTEGER,
    goals_assists INTEGER,
    penalty_scored INTEGER,
    penalty_missed INTEGER,
    FOREIGN KEY(player_id) REFERENCES soccer.Players(id),
    FOREIGN KEY(league_id) REFERENCES soccer.Leagues(id)
    
);

CREATE TABLE IF NOT EXISTS soccer.Fixtures(
    id VARCHAR(10) PRIMARY KEY,
    referee VARCHAR(50),
    date TIMESTAMP,
    venue_id VARCHAR(10),
    venue_name VARCHAR(50),
    venue_city VARCHAR(30),
    league_id VARCHAR(10),
    league_season VARCHAR(4),
    teams_home_id VARCHAR(10),
    teams_home_winner BOOLEAN,
    teams_away_id VARCHAR(10),
    teams_away_winner BOOLEAN,
    goals_home INTEGER,
    goals_away INTEGER,
    score_halftime_home INTEGER,
    score_halftime_away INTEGER,
    score_fulltime_home INTEGER,
    score_fulltime_away INTEGER,
    --FOREIGN KEY(league_id) REFERENCES soccer.Leagues(id)
    FOREIGN KEY(teams_home_id) REFERENCES soccer.Teams(id),
    FOREIGN KEY(teams_away_id) REFERENCES soccer.Teams(id)
);

CREATE TABLE IF NOT EXISTS soccer.Fixture_Results(
    fixture_id VARCHAR,
    team_id VARCHAR,
    ball_possession_perc NUMERIC,
    blocked_shots INTEGER,
    corner_Kicks INTEGER,
    fouls INTEGER,
    goalkeeper_saves INTEGER,
    offsides INTEGER,
    passes_perc NUMERIC,
    total_passes INTEGER,
    accurate_passes INTEGER,
    red_cards TEXT,
    yellow_cards INTEGER,
    shots_insidebox INTEGER,
    shots_off_goal INTEGER,
    shots_on_goal INTEGER,
    shots_outsidebox INTEGER,
    total_shots INTEGER,
    FOREIGN KEY(fixture_id) REFERENCES soccer.Fixtures(id),
    FOREIGN KEY(team_id) REFERENCES soccer.Teams(id)
);

